# Этап сборки (build stage)
FROM golang:1.20 AS builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем файлы go.mod и go.sum для загрузки зависимостей
COPY go.mod go.sum ./

# Загружаем все зависимости
RUN go mod download

# Копируем остальной код приложения в контейнер
COPY . .

# Собираем приложение в бинарный файл
RUN CGO_ENABLED=0 GOOS=linux go build -o myapp .

# Этап минимального контейнера (runtime stage)
FROM alpine:latest

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем собранный бинарник из предыдущего этапа
COPY --from=builder /app/myapp .

# Указываем переменную среды по умолчанию
ENV RABBITMQ_URL amqp://admin:admin@rabbitmqcluster-we1.rabbitmq.svc.cluster.local:5672

# Даем доступ на исполнение бинарного файла
RUN chmod +x ./myapp

# Указываем команду для запуска
CMD ["./myapp"]
